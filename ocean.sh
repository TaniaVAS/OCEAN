#!/bin/bash

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
YELLOW='\033[1;33m'
MAGENTA='\033[0;35m'
RESET='\033[0m'

# –ò–∫–æ–Ω–∫–∏ –¥–ª—è –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
ICON_TELEGRAM="üöÄ"
ICON_INSTALL="üõ†Ô∏è"
ICON_LOGS="üìÑ"
ICON_STOP="‚èπÔ∏è"
ICON_START="‚ñ∂Ô∏è"
ICON_WALLET="üí∞"
ICON_EXIT="‚ùå"
ICON_CHANGE_RPC="üîÑ"
ICON_DELETE="üóëÔ∏è"

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –≥—Ä–∞–Ω–∏—Ü
draw_top_border() {
    echo -e "${CYAN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${RESET}"
}

draw_middle_border() {
    echo -e "${CYAN}‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£${RESET}"
}

draw_bottom_border() {
    echo -e "${CYAN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${RESET}"
}
print_telegram_icon() {
    echo -e "          ${MAGENTA}${ICON_TELEGRAM} –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à Telegram!${RESET}"
}

# –õ–æ–≥–æ—Ç–∏–ø –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
display_ascii() {
    echo -e "${CYAN}   ____   _  __   ___    ____ _   __   ____ ______   ____   ___    ____${RESET}"
    echo -e "${CYAN}  /  _/  / |/ /  / _ \  /  _/| | / /  /  _//_  __/  /  _/  / _ |  / __/${RESET}"
    echo -e "${CYAN} _/ /   /    /  / // / _/ /  | |/ /  _/ /   / /    _/ /   / __ | _\ \  ${RESET}"
    echo -e "${CYAN}/___/  /_/|_/  /____/ /___/  |___/  /___/  /_/    /___/  /_/ |_|/___/  ${RESET}"
    echo -e ""
    echo -e "${YELLOW}–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ Telegram: https://t.me/CryptalikBTC${RESET}"
    echo -e "${YELLOW}–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ YouTube: https://www.youtube.com/@Cryptalik${RESET}"
    echo -e "${YELLOW}–ó–¥–µ—Å—å –ø—Ä–æ –∞–∏—Ä–¥—Ä–æ–ø—ã –∏ –Ω–æ–¥—ã: https://t.me/indivitias${RESET}"
    echo -e "${YELLOW}–ö—É–ø–∏ –º–Ω–µ –±—É—Ç—ã–ª–æ—á–∫—É –∫–µ—Ñ–∏—Ä–∞ %)${RESET}"
    echo -e "${GREEN}0x8a3476d7cd2bf198b2f4dc492d9726e1d1fb25fb${RESET}"
    echo -e ""
    echo -e "${CYAN}–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${RESET}"
    echo -e "  - ${YELLOW}–ü—Ä–æ—Å–º–æ—Ç—Ä —Ñ–∞–π–ª–æ–≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:${RESET} ls"
    echo -e "  - ${YELLOW}–í—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é:${RESET} cd docker-browser"
    echo -e "  - ${YELLOW}–í—ã—Ö–æ–¥ –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:${RESET} cd .."
    echo -e ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è IP-–∞–¥—Ä–µ—Å–∞
get_ip_address() {
    ip_address=$(hostname -I | awk '{print $1}')
    if [[ -z "$ip_address" ]]; then
        echo -ne "${YELLOW}–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å IP-–∞–¥—Ä–µ—Å.${RESET}"
        echo -ne "${YELLOW} –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ IP-–∞–¥—Ä–µ—Å:${RESET} "
        read ip_address
    fi
    echo "$ip_address"
}

show_menu() {
    clear
    draw_top_border
    display_ascii
    draw_middle_border
    print_telegram_icon
    echo -e "    ${BLUE}–ö—Ä–∏–ø—Ç–∞–Ω, –ø–æ–¥–ø–∏—à–∏—Å—å!: ${YELLOW}https://t.me/indivitias${RESET}"
    draw_middle_border

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—É—â—É—é —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ IP-–∞–¥—Ä–µ—Å
    current_dir=$(pwd)
    ip_address=$(get_ip_address)
    echo -e "    ${GREEN}–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:${RESET} ${current_dir}"
    echo -e "    ${GREEN}IP-–∞–¥—Ä–µ—Å:${RESET} ${ip_address}"
    draw_middle_border

    echo -e "    ${YELLOW}–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:${RESET}"
    echo
    echo -e "    ${CYAN}1.${RESET} ${ICON_INSTALL} –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —É–∑–µ–ª"
    echo -e "    ${CYAN}2.${RESET} ${ICON_LOGS} –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ Typesense"
    echo -e "    ${CYAN}3.${RESET} ${ICON_LOGS} –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ —É–∑–ª–æ–≤ Ocean"
    echo -e "    ${CYAN}4.${RESET} ${ICON_STOP} –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —É–∑–µ–ª"
    echo -e "    ${CYAN}5.${RESET} ${ICON_START} –ó–∞–ø—É—Å—Ç–∏—Ç—å —É–∑–µ–ª"
    echo -e "    ${CYAN}6.${RESET} ${ICON_WALLET} –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏"
    echo -e "    ${CYAN}7.${RESET} ${ICON_CHANGE_RPC} –ò–∑–º–µ–Ω–∏—Ç—å RPC"  # –ù–æ–≤—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é
    echo -e "    ${CYAN}0.${RESET} ${ICON_EXIT} –í—ã–π—Ç–∏"
    echo
    draw_bottom_border
    echo -ne "    ${YELLOW}–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤—ã–±–æ—Ä [0-7]:${RESET} "  # –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –¥–æ [0-7]
    read choice
}

install_node() {
    echo -e "${GREEN}üõ†Ô∏è  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É–∑–ª–∞...${RESET}"
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
    sudo apt update && sudo apt upgrade -y

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker, –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    if ! command -v docker &> /dev/null; then
        sudo apt install docker.io -y
        sudo systemctl start docker
        sudo systemctl enable docker
    fi

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose, –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    if ! command -v docker-compose &> /dev/null; then
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" \
        -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
    fi

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python3 –∏ pip3, –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
    if ! command -v python3 &> /dev/null; then
        sudo apt install python3 -y
    fi
    if ! command -v pip3 &> /dev/null; then
        sudo apt install python3-pip -y
    fi

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ crontab, –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    if ! command -v crontab &> /dev/null; then
        sudo apt install cron -y
        sudo systemctl enable cron
        sudo systemctl start cron
    fi

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ Python
    pip3 install eth_account requests

    # –ó–∞–ø—Ä–æ—Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É–∑–ª–æ–≤
    echo -ne "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∑–ª–æ–≤:${RESET} "
    read num_nodes

    # –ü–æ–ª—É—á–µ–Ω–∏–µ IP-–∞–¥—Ä–µ—Å–∞
    ip_address=$(hostname -I | awk '{print $1}')
    if [[ -z "$ip_address" ]]; then
        echo -ne "${YELLOW}–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å IP-–∞–¥—Ä–µ—Å.${RESET}"
        echo -ne "${YELLOW} –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ IP-–∞–¥—Ä–µ—Å:${RESET} "
        read ip_address
    fi

    # –ó–∞–ø—É—Å–∫ script.py —Å IP-–∞–¥—Ä–µ—Å–æ–º –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —É–∑–ª–æ–≤
    python3 script.py "$ip_address" "$num_nodes"
    docker network create ocean_network
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ Docker Compose –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É–∑–ª–∞
    for ((i=1; i<=num_nodes+1; i++)); do
        docker-compose -f docker-compose$i.yaml up -d
    done
    current_dir=$(pwd)
    # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ req.py –∫–∞–∂–¥—ã–π —á–∞—Å —Å –ø–æ–º–æ—â—å—é crontab
    (crontab -l 2>/dev/null; echo "0 * * * * python3 $(pwd)/req.py $ip_address $current_dir") | crontab -

    echo -e "${GREEN}‚úÖ –£–∑–µ–ª —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${RESET}"
    echo
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

view_typesense_logs() {
    echo -e "${GREEN}üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ Typesense...${RESET}"
    docker logs typesense
    echo
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

view_ocean_node_logs() {
    echo -ne "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∑–ª–æ–≤:${RESET} "
    read num_nodes
    echo -ne "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ —É–∑–µ–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ (1-${num_nodes}):${RESET} "
    read node_number
    echo -e "${GREEN}üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ ocean-node-${node_number}...${RESET}"
    docker logs ocean-node-$node_number
    echo
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

stop_node() {
    echo -ne "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∑–ª–æ–≤:${RESET} "
    read num_nodes
    echo -e "${GREEN}‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —É–∑–ª–æ–≤...${RESET}"
    for ((i=1; i<=num_nodes+1; i++)); do
        docker-compose -f docker-compose$i.yaml down
    done

    # –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ crontab –¥–ª—è req.py
    crontab -l | grep -v "req.py" | crontab -

    echo -e "${GREEN}‚úÖ –£–∑–ª—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏ –∑–∞–ø–∏—Å—å –≤ crontab —É–¥–∞–ª–µ–Ω–∞.${RESET}"
    echo
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

start_node() {
    echo -ne "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∑–ª–æ–≤:${RESET} "
    read num_nodes

    # –ü–æ–ª—É—á–µ–Ω–∏–µ IP-–∞–¥—Ä–µ—Å–∞
    ip_address=$(hostname -I | awk '{print $1}')
    if [[ -z "$ip_address" ]]; then
        echo -ne "${YELLOW}–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å IP-–∞–¥—Ä–µ—Å.${RESET}"
        echo -ne "${YELLOW} –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ IP-–∞–¥—Ä–µ—Å:${RESET} "
        read ip_address
    fi

    echo -e "${GREEN}‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫ —É–∑–ª–æ–≤...${RESET}"
    for ((i=1; i<=num_nodes+1; i++)); do
        docker-compose -f docker-compose$i.yaml up -d
    done
    
    ip_address=$(hostname -I | awk '{print $1}')
    if [[ -z "$ip_address" ]]; then
        echo -ne "${YELLOW}–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å IP-–∞–¥—Ä–µ—Å.${RESET}"
        echo -ne "${YELLOW} –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ IP-–∞–¥—Ä–µ—Å:${RESET} "
        read ip_address
    fi
    
    current_dir=$(pwd)
    # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ req.py –∫–∞–∂–¥—ã–π —á–∞—Å —Å –ø–æ–º–æ—â—å—é crontab
    (crontab -l 2>/dev/null; echo "0 * * * * python3 $(pwd)/req.py $ip_address $current_dir") | crontab -

    echo -e "${GREEN}‚úÖ –£–∑–ª—ã –∑–∞–ø—É—â–µ–Ω—ã –∏ –∑–∞–ø–∏—Å—å –≤ crontab –¥–æ–±–∞–≤–ª–µ–Ω–∞.${RESET}"
    echo
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

view_wallets() {
    echo -e "${GREEN}üí∞ –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∫–æ—à–µ–ª—å–∫–æ–≤...${RESET}"
    cat wallets.json
    echo
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

# –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è RPC
change_rpc() {
    echo -e "${GREEN}üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏–µ RPC...${RESET}"
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ yaml, –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
    echo -e "${YELLOW}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ YAML...${RESET}"
    pip3 install yaml
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ URL —Å–∫—Ä–∏–ø—Ç–∞ RPC.py
    RPC_URL="https://raw.githubusercontent.com/dknodes/ocean/master/RPC.py"
    
    # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ RPC.py
    echo -e "${YELLOW}–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ RPC.py...${RESET}"
    wget -O RPC.py "$RPC_URL"
    
    if [[ $? -ne 0 ]]; then
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å RPC.py.${RESET}"
        echo
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
        return
    fi
    
    # –ó–∞–ø—É—Å–∫ RPC.py
    echo -e "${YELLOW}–ó–∞–ø—É—Å–∫ RPC.py...${RESET}"
    python3 RPC.py
    
    if [[ $? -eq 0 ]]; then
        echo -e "${GREEN}‚úÖ RPC —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω.${RESET}"
    else
        echo -e "${RED}‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ RPC.${RESET}"
    fi
    echo
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

# –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª
while true; do
    show_menu
    case $choice in
        1)
            install_node
            ;;
        2)
            view_typesense_logs
            ;;
        3)
            view_ocean_node_logs
            ;;
        4)
            stop_node
            ;;
        5)
            start_node
            ;;
        6)
            view_wallets
            ;;
        7)  # –ù–æ–≤—ã–π –ø—É–Ω–∫—Ç –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è RPC
            change_rpc
            ;;
        0)
            echo -e "${GREEN}‚ùå –í—ã—Ö–æ–¥...${RESET}"
            exit 0
            ;;
        *)
            echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${RESET}"
            echo
            read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
            ;;
    esac
done
