#!/bin/bash

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
YELLOW='\033[1;33m'
MAGENTA='\033[0;35m'
RESET='\033[0m'

# –ò–∫–æ–Ω–∫–∏ –¥–ª—è –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
ICON_TELEGRAM="üöÄ"
ICON_INSTALL="üõ†Ô∏è"
ICON_LOGS="üìÑ"
ICON_STOP="‚èπÔ∏è"
ICON_START="‚ñ∂Ô∏è"
ICON_WALLET="üí∞"
ICON_EXIT="‚ùå"
ICON_CHANGE_RPC="üîÑ"
ICON_DELETE="üóëÔ∏è"

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –≥—Ä–∞–Ω–∏—Ü
draw_top_border() {
    echo -e "${CYAN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${RESET}"
}

draw_middle_border() {
    echo -e "${CYAN}‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£${RESET}"
}

draw_bottom_border() {
    echo -e "${CYAN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${RESET}"
}

# –õ–æ–≥–æ—Ç–∏–ø –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
display_ascii() {
    echo -e "${CYAN}   ____   _  __   ___    ____ _   __   ____ ______   ____   ___    ____${RESET}"
    echo -e "${CYAN}  /  _/  / |/ /  / _ \  /  _/| | / /  /  _//_  __/  /  _/  / _ |  / __/${RESET}"
    echo -e "${CYAN} _/ /   /    /  / // / _/ /  | |/ /  _/ /   / /    _/ /   / __ | _\ \  ${RESET}"
    echo -e "${CYAN}/___/  /_/|_/  /____/ /___/  |___/  /___/  /_/    /___/  /_/ |_|/___/  ${RESET}"
    echo -e ""
    echo -e "${YELLOW}–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ Telegram: https://t.me/CryptalikBTC${RESET}"
    echo -e "${YELLOW}–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ YouTube: https://www.youtube.com/@Cryptalik${RESET}"
    echo -e "${YELLOW}–ó–¥–µ—Å—å –ø—Ä–æ –∞–∏—Ä–¥—Ä–æ–ø—ã –∏ –Ω–æ–¥—ã: https://t.me/indivitias${RESET}"
    echo -e "${YELLOW}–ö—É–ø–∏ –º–Ω–µ –±—É—Ç—ã–ª–æ—á–∫—É –∫–µ—Ñ–∏—Ä–∞ %)${RESET}"
    echo -e "${GREEN}0x8a3476d7cd2bf198b2f4dc492d9726e1d1fb25fb${RESET}"
    echo -e ""
    echo -e "${CYAN}–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${RESET}"
    echo -e "  - ${YELLOW}–ü—Ä–æ—Å–º–æ—Ç—Ä —Ñ–∞–π–ª–æ–≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:${RESET} ls"
    echo -e "  - ${YELLOW}–í—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é:${RESET} cd docker-browser"
    echo -e "  - ${YELLOW}–í—ã—Ö–æ–¥ –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:${RESET} cd .."
    echo -e ""
}

 # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ IP-–∞–¥—Ä–µ—Å–∞
    current_dir=$(pwd)
    ip_address=$(get_ip_address)
    echo -e "    ${GREEN}–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:${RESET} ${current_dir}"
    echo -e "    ${GREEN}IP-–∞–¥—Ä–µ—Å:${RESET} ${ip_address}"
    draw_middle_border

    echo -e "    ${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é:${RESET}"
    echo
    echo -e "    ${CYAN}1.${RESET} ${ICON_INSTALL} –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo -e "    ${CYAN}2.${RESET} ${ICON_LOGS} –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ Typesense"
    echo -e "    ${CYAN}3.${RESET} ${ICON_LOGS} –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ Ocean Node"
    echo -e "    ${CYAN}4.${RESET} ${ICON_STOP} –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo -e "    ${CYAN}5.${RESET} ${ICON_START} –ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É"
    echo -e "    ${CYAN}6.${RESET} ${ICON_WALLET} –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏"
    echo -e "    ${CYAN}7.${RESET} ${ICON_CHANGE_RPC} –ò–∑–º–µ–Ω–∏—Ç—å RPC"  # –ù–æ–≤—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é
    echo -e "    ${CYAN}0.${RESET} ${ICON_EXIT} –í—ã—Ö–æ–¥"
    echo
    draw_bottom_border
    echo -ne "    ${YELLOW}–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤—ã–±–æ—Ä [0-7]:${RESET} "
    read choice
}

install_node() {
    echo -e "${GREEN}üõ†Ô∏è  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã...${RESET}"
    sudo apt update && sudo apt upgrade -y

    if ! command -v docker &> /dev/null; then
        sudo apt install docker.io -y
        sudo systemctl start docker
        sudo systemctl enable docker
    fi

    if ! command -v docker-compose &> /dev/null; then
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" \
        -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
    fi

    if ! command -v python3 &> /dev/null; then
        sudo apt install python3 -y
    fi
    if ! command -v pip3 &> /dev/null; then
        sudo apt install python3-pip -y
    fi

    if ! command -v crontab &> /dev/null; then
        sudo apt install cron -y
        sudo systemctl enable cron
        sudo systemctl start cron
    fi

    pip3 install eth_account requests

    echo -ne "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–¥:${RESET} "
    read num_nodes

    ip_address=$(hostname -I | awk '{print $1}')
    if [[ -z "$ip_address" ]]; then
        echo -ne "${YELLOW}–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å IP-–∞–¥—Ä–µ—Å.${RESET}"
        echo -ne "${YELLOW} –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ IP-–∞–¥—Ä–µ—Å:${RESET} "
        read ip_address
    fi

    python3 script.py "$ip_address" "$num_nodes"
    docker network create ocean_network

    for ((i=1; i<=num_nodes+1; i++)); do
        docker-compose -f docker-compose$i.yaml up -d
    done

    current_dir=$(pwd)
    (crontab -l 2>/dev/null; echo "0 * * * * python3 $current_dir/req.py $ip_address $current_dir") | crontab -

    echo -e "${GREEN}‚úÖ –ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.${RESET}"
    echo
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

view_typesense_logs() {
    echo -e "${GREEN}üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ Typesense...${RESET}"
    docker logs typesense
    echo
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

view_ocean_node_logs() {
    echo -ne "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–¥:${RESET} "
    read num_nodes
    echo -ne "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –Ω–æ–¥—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ (1-${num_nodes}):${RESET} "
    read node_number
    echo -e "${GREEN}üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ ocean-node-${node_number}...${RESET}"
    docker logs ocean-node-$node_number
    echo
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

stop_node() {
    echo -ne "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–¥:${RESET} "
    read num_nodes
    echo -e "${GREEN}‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥...${RESET}"
    for ((i=1; i<=num_nodes+1; i++)); do
        docker-compose -f docker-compose$i.yaml down
    done

    crontab -l | grep -v "req.py" | crontab -

    echo -e "${GREEN}‚úÖ –ù–æ–¥—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã, –∑–∞–¥–∞—á–∞ –≤ crontab —É–¥–∞–ª–µ–Ω–∞.${RESET}"
    echo
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

start_node() {
    echo -ne "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–¥:${RESET} "
    read num_nodes

    ip_address=$(hostname -I | awk '{print $1}')
    if [[ -z "$ip_address" ]]; then
        echo -ne "${YELLOW}–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å IP-–∞–¥—Ä–µ—Å.${RESET}"
        echo -ne "${YELLOW} –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ IP-–∞–¥—Ä–µ—Å:${RESET} "
        read ip_address
    fi

    echo -e "${GREEN}‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫ –Ω–æ–¥...${RESET}"
    for ((i=1; i<=num_nodes+1; i++)); do
        docker-compose -f docker-compose$i.yaml up -d
    done

    current_dir=$(pwd)
    (crontab -l 2>/dev/null; echo "0 * * * * python3 $current_dir/req.py $ip_address $current_dir") | crontab -

    echo -e "${GREEN}‚úÖ –ù–æ–¥—ã –∑–∞–ø—É—â–µ–Ω—ã, –∑–∞–¥–∞—á–∞ –≤ crontab –¥–æ–±–∞–≤–ª–µ–Ω–∞.${RESET}"
    echo
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

view_wallets() {
    echo -e "${GREEN}üí∞ –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∫–æ—à–µ–ª—å–∫–æ–≤...${RESET}"
    cat wallets.json
    echo
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

change_rpc() {
    echo -ne "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π RPC URL:${RESET} "
    read new_rpc
    echo -e "${GREEN}üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏–µ RPC –Ω–∞ ${new_rpc}...${RESET}"

    sed -i "s|https://.*|${new_rpc}|g" *.yaml

    echo -e "${GREEN}‚úÖ RPC —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.${RESET}"
    echo
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

while true; do
    show_menu
    case $choice in
        1) install_node ;;
        2) view_typesense_logs ;;
        3) view_ocean_node_logs ;;
        4) stop_node ;;
        5) start_node ;;
        6) view_wallets ;;
        7) change_rpc ;;
        0) echo -e "${RED}–í—ã—Ö–æ–¥...${RESET}" && exit 0 ;;
        *) echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${RESET}" && sleep 2 ;;
    esac
done
